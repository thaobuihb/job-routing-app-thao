{"ast":null,"code":"export async function dataLoader(q) {\n  try {\n    const response = await fetch(\"http://localhost:3001/jobs\");\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const jobs = await response.json();\n    if (q) {\n      return jobs.filter(job => job.title.includes(q) || job.description.includes(q) || job.city.includes(q) || job.skills.some(skill => skill.includes(q)));\n    } else {\n      return jobs;\n    }\n  } catch (error) {\n    console.error(\"Failed to fetch jobs:\", error);\n    return [];\n  }\n}","map":{"version":3,"names":["dataLoader","q","response","fetch","ok","Error","jobs","json","filter","job","title","includes","description","city","skills","some","skill","error","console"],"sources":["/Users/dinhngochien/Documents/Thao Bui/Mycode/ReactJS/job-thao/src/loader/dataLoader.js"],"sourcesContent":["export async function dataLoader(q) {\n  try {\n    const response = await fetch(\"http://localhost:3001/jobs\");\n    if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n    }\n    const jobs = await response.json();\n    if (q) {\n        return jobs.filter(\n            (job) =>\n                job.title.includes(q) ||\n                job.description.includes(q) ||\n                job.city.includes(q) ||\n                job.skills.some((skill) => skill.includes(q))\n        );\n    } else {\n        return jobs;\n    }\n} catch (error) {\n    console.error(\"Failed to fetch jobs:\", error);\n    return [];\n}\n}"],"mappings":"AAAA,OAAO,eAAeA,UAAUA,CAACC,CAAC,EAAE;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;IAC1D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,IAAIN,CAAC,EAAE;MACH,OAAOK,IAAI,CAACE,MAAM,CACbC,GAAG,IACAA,GAAG,CAACC,KAAK,CAACC,QAAQ,CAACV,CAAC,CAAC,IACrBQ,GAAG,CAACG,WAAW,CAACD,QAAQ,CAACV,CAAC,CAAC,IAC3BQ,GAAG,CAACI,IAAI,CAACF,QAAQ,CAACV,CAAC,CAAC,IACpBQ,GAAG,CAACK,MAAM,CAACC,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACL,QAAQ,CAACV,CAAC,CAAC,CACpD,CAAC;IACL,CAAC,MAAM;MACH,OAAOK,IAAI;IACf;EACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,EAAE;EACb;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}