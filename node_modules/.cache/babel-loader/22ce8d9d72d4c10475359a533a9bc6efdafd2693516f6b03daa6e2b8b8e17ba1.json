{"ast":null,"code":"var _jsxFileName = \"/Users/dinhngochien/Documents/Thao Bui/Mycode/ReactJS/job-thao/src/components/JobCard.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport SkillChip from \"../components/SkillChip\";\nimport { styled } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardStyle = styled(Card)(({\n  theme\n}) => ({\n  boxShadow: \"none\",\n  border: \"1px solid black\",\n  width: \"100%\",\n  maxWidth: \"350px\",\n  minWidth: \"270px\",\n  minHeight: \"240px\",\n  margin: \"auto\",\n  backgroundColor: theme.palette.primary.light\n}));\n_c = CardStyle;\nexport default function ActionAreaCard({\n  job\n}) {\n  _s();\n  const navigate = useNavigate();\n  let location = useLocation();\n  return /*#__PURE__*/_jsxDEV(CardStyle, {\n    ariant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"subtitle1\",\n        component: \"div\",\n        sx: {\n          color: theme => theme.palette.common.white\n        },\n        children: [job.title, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SkillChip, {\n        skill: job.skills\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          pt: \"10px\",\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n          color: theme => theme.palette.common.white\n        },\n        children: job.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      variant: \"contained\",\n      onClick: () => navigate(`/job/${job.id}`),\n      state: {\n        backgroundLocation: location\n      },\n      sx: {\n        backgroundColor: \"#ffa726\",\n        \"&:hover\": {\n          backgroundColor: \"white\"\n        },\n        color: \"black\"\n      },\n      children: \"Learn More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ActionAreaCard, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c2 = ActionAreaCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"CardStyle\");\n$RefreshReg$(_c2, \"ActionAreaCard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Button","useNavigate","useLocation","SkillChip","styled","jsxDEV","_jsxDEV","CardStyle","theme","boxShadow","border","width","maxWidth","minWidth","minHeight","margin","backgroundColor","palette","primary","light","_c","ActionAreaCard","job","_s","navigate","location","ariant","children","gutterBottom","variant","component","sx","color","common","white","title","fileName","_jsxFileName","lineNumber","columnNumber","skill","skills","pt","whiteSpace","overflow","textOverflow","description","size","onClick","id","state","backgroundLocation","_c2","$RefreshReg$"],"sources":["/Users/dinhngochien/Documents/Thao Bui/Mycode/ReactJS/job-thao/src/components/JobCard.js"],"sourcesContent":["import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\n\nimport Button from \"@mui/material/Button\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport SkillChip from \"../components/SkillChip\";\nimport { styled } from \"@mui/material/styles\";\n\nconst CardStyle = styled(Card)(({ theme }) => ({\n  boxShadow: \"none\",\n  border: \"1px solid black\",\n  width: \"100%\",\n  maxWidth: \"350px\",\n  minWidth: \"270px\",\n  minHeight: \"240px\",\n  margin: \"auto\",\n  backgroundColor: theme.palette.primary.light,\n}));\n\nexport default function ActionAreaCard({ job }) {\n  const navigate = useNavigate();\n  let location = useLocation();\n\n  return (\n    <CardStyle ariant=\"outlined\">\n      <CardContent>\n        <Typography\n          gutterBottom\n          variant=\"subtitle1\"\n          component=\"div\"\n          sx={{ color: (theme) => theme.palette.common.white }}\n        >\n          {job.title}\n          <hr />\n        </Typography>\n        <SkillChip skill={job.skills} />\n        <Typography\n          variant=\"body2\"\n          sx={{\n            pt: \"10px\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            color: (theme) => theme.palette.common.white,\n          }}\n        >\n          {job.description}\n        </Typography>\n      </CardContent>\n      <Button\n        size=\"small\"\n        variant=\"contained\"\n        onClick={() => navigate(`/job/${job.id}`)}\n        state={{ backgroundLocation: location }}\n        sx={{\n          backgroundColor: \"#ffa726\",\n          \"&:hover\": {\n            backgroundColor: \"white\",\n          },\n          color: \"black\",\n        }}\n      >\n        Learn More\n      </Button>\n    </CardStyle>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}